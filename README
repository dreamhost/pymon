======================
dependancies
======================
Dependencies are automatically downloaded and installed for you. I
had planned on using EasyInstall for this, but alas, many people
are not producing setup.py files that are EasyInstall-friendly. As
the maintainers of the software upon which we depend make their
stuff EasyInstall-ready, these will shift into the setup.py file,
to be handled by setuptools/EasyInstall.

If you are interestsed, you can read the DEPENDANCIES file.

Please note, that if you have Twisted installed already, the
auto-installer won't install it. But pymon requires Twisted 2.1.0,
because it users the Epsilon package, so you will need to manually
install/upgrade your Twisted if you have anything less than 2.1.0.

======================
installation
======================
Please see the INSTALL file.

======================
running pymon
======================
If the python scripts bin dir is in your path, you can just run the
following:
  sudo pymond

If not, you can add that to your path, but you may as well add
/usr/local/pymon/bin to your path too ;-) Then you can run that
command. If you prefer to not make PATH changes, just run it like this:
  sudo PYMON_PREFIX/bin/pymond

(The default would be "sudo /usr/local/pymon/bin/pymond").

======================
creating a new monitor
======================
If you want to add more monitoring types, you will need to:

    * add the type to etc/pymon.conf
    * add the configuration to etc/schema.xml
    * add a new PyMonXXX protocol subclass to lib/protocols.py to
    handle data processing and saving.
    * add a XXXMonitor class lib/monitors.py, inheriting from
    MonitorMixin and an appropriate FactoryClass
    * update AbstractFactory in lib/monitors.py with a dispatch
    method for instantiating your new monitor class
    * enable the new monitoring type in etc/pymon.conf
    * rebuild pymon with 'python setup.py install'

======================
api notes
======================
The currently defined monitor types are as follows:
    * ping
    * http status
    
======================
port numbers
======================
How the port numbers were chosen:

>>> from adytum.util import numerology
>>> numerology.getNumerologicalValue('adytum pymon service web')
3293
>>> numerology.getNumerologicalValue('adytum pymon service xml-rpc')
3298
